var t,e;t=self,e=function(){return(()=>{var t,e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"t",{value:!0})}},n={};e.r(n),e.d(n,{AbortError:()=>i,DefaultHttpClient:()=>S,HttpClient:()=>c,HttpError:()=>o,HttpResponse:()=>s,HttpTransportType:()=>H,HubConnection:()=>P,HubConnectionBuilder:()=>B,HubConnectionState:()=>R,JsonHubProtocol:()=>F,LogLevel:()=>t,MessageType:()=>I,NullLogger:()=>a,Subject:()=>k,TimeoutError:()=>r,TransferFormat:()=>L,VERSION:()=>h});class o extends Error{constructor(t,e){const n=new.target.prototype;super(t),this.statusCode=e,this.__proto__=n}}class r extends Error{constructor(t="A timeout occurred."){const e=new.target.prototype;super(t),this.__proto__=e}}class i extends Error{constructor(t="An abort occurred."){const e=new.target.prototype;super(t),this.__proto__=e}}class s{constructor(t,e,n){this.statusCode=t,this.statusText=e,this.content=n}}class c{get(t,e){return this.send({...e,method:"GET",url:t})}post(t,e){return this.send({...e,method:"POST",url:t})}delete(t,e){return this.send({...e,method:"DELETE",url:t})}getCookieString(t){return""}}!function(t){t[t.Trace=0]="Trace",t[t.Debug=1]="Debug",t[t.Information=2]="Information",t[t.Warning=3]="Warning",t[t.Error=4]="Error",t[t.Critical=5]="Critical",t[t.None=6]="None"}(t||(t={}));class a{constructor(){}log(t,e){}}a.instance=new a;const h="6.0.0-preview.3.21201.13";class l{static isRequired(t,e){if(null==t)throw new Error(`The '${e}' argument is required.`)}static isNotEmpty(t,e){if(!t||t.match(/^\s*$/))throw new Error(`The '${e}' argument should not be empty.`)}static isIn(t,e,n){if(!(t in e))throw new Error(`Unknown ${n} value: ${t}.`)}}class u{static get isBrowser(){return"object"==typeof window}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isNode(){return!this.isBrowser&&!this.isWebWorker}}function d(t,e){let n="";return g(t)?(n=`Binary data of length ${t.byteLength}`,e&&(n+=`. Content: '${function(t){const e=new Uint8Array(t);let n="";return e.forEach((t=>{n+=`0x${t<16?"0":""}${t.toString(16)} `})),n.substr(0,n.length-1)}(t)}'`)):"string"==typeof t&&(n=`String data of length ${t.length}`,e&&(n+=`. Content: '${t}'`)),n}function g(t){return t&&"undefined"!=typeof ArrayBuffer&&(t instanceof ArrayBuffer||t.constructor&&"ArrayBuffer"===t.constructor.name)}async function p(e,n,o,r,i,s,c,a,h){let l={};if(i){const t=await i();t&&(l={Authorization:`Bearer ${t}`})}const[u,p]=m();l[u]=p,e.log(t.Trace,`(${n} transport) sending data. ${d(s,c)}.`);const f=g(s)?"arraybuffer":"text",w=await o.post(r,{content:s,headers:{...l,...h},responseType:f,withCredentials:a});e.log(t.Trace,`(${n} transport) request complete. Response status: ${w.statusCode}.`)}class f{constructor(t,e){this.i=t,this.h=e}dispose(){const t=this.i.observers.indexOf(this.h);t>-1&&this.i.observers.splice(t,1),0===this.i.observers.length&&this.i.cancelCallback&&this.i.cancelCallback().catch((t=>{}))}}class w{constructor(t){this.l=t,this.out=console}log(e,n){if(e>=this.l){const o=`[${(new Date).toISOString()}] ${t[e]}: ${n}`;switch(e){case t.Critical:case t.Error:this.out.error(o);break;case t.Warning:this.out.warn(o);break;case t.Information:this.out.info(o);break;default:this.out.log(o)}}}}function m(){let t="X-SignalR-User-Agent";return u.isNode&&(t="User-Agent"),[t,b(h,y(),u.isNode?"NodeJS":"Browser",v())]}function b(t,e,n,o){let r="Microsoft SignalR/";const i=t.split(".");return r+=`${i[0]}.${i[1]}`,r+=` (${t}; `,r+=e&&""!==e?`${e}; `:"Unknown OS; ",r+=`${n}`,r+=o?`; ${o}`:"; Unknown Runtime Version",r+=")",r}function y(){if(!u.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function v(){if(u.isNode)return process.versions.node}class C extends c{constructor(t){if(super(),this.u=t,"undefined"==typeof fetch){const t=require;this.p=new(t("tough-cookie").CookieJar),this.g=t("node-fetch"),this.g=t("fetch-cookie")(this.g,this.p),this.m=t("abort-controller")}else this.g=fetch.bind(self),this.m=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new i;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const n=new this.m;let c;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),c=new i});let a,h=null;if(e.timeout){const o=e.timeout;h=setTimeout((()=>{n.abort(),this.u.log(t.Warning,"Timeout from HTTP request."),c=new r}),o)}try{a=await this.g(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(e){if(c)throw c;throw this.u.log(t.Warning,`Error from HTTP request. ${e}.`),e}finally{h&&clearTimeout(h),e.abortSignal&&(e.abortSignal.onabort=null)}if(!a.ok)throw new o(a.statusText,a.status);const l=function(t,e){let n;switch(e){case"arraybuffer":n=t.arrayBuffer();break;case"text":n=t.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:n=t.text()}return n}(a,e.responseType),u=await l;return new s(a.status,a.statusText,u)}getCookieString(t){let e="";return u.isNode&&this.p&&this.p.getCookies(t,((t,n)=>e=n.join("; "))),e}}class E extends c{constructor(t){super(),this.u=t}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new i):e.method?e.url?new Promise(((n,c)=>{const a=new XMLHttpRequest;a.open(e.method,e.url,!0),a.withCredentials=void 0===e.withCredentials||e.withCredentials,a.setRequestHeader("X-Requested-With","XMLHttpRequest"),a.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const h=e.headers;h&&Object.keys(h).forEach((t=>{a.setRequestHeader(t,h[t])})),e.responseType&&(a.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{a.abort(),c(new i)}),e.timeout&&(a.timeout=e.timeout),a.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),a.status>=200&&a.status<300?n(new s(a.status,a.statusText,a.response||a.responseText)):c(new o(a.statusText,a.status))},a.onerror=()=>{this.u.log(t.Warning,`Error from HTTP request. ${a.status}: ${a.statusText}.`),c(new o(a.statusText,a.status))},a.ontimeout=()=>{this.u.log(t.Warning,"Timeout from HTTP request."),c(new r)},a.send(e.content||"")})):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class S extends c{constructor(t){if(super(),"undefined"!=typeof fetch||u.isNode)this.v=new C(t);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this.v=new E(t)}}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new i):t.method?t.url?this.v.send(t):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(t){return this.v.getCookieString(t)}}class ${static write(t){return`${t}${$.RecordSeparator}`}static parse(t){if(t[t.length-1]!==$.RecordSeparator)throw new Error("Message is incomplete.");const e=t.split($.RecordSeparator);return e.pop(),e}}$.RecordSeparatorCode=30,$.RecordSeparator=String.fromCharCode($.RecordSeparatorCode);class T{writeHandshakeRequest(t){return $.write(JSON.stringify(t))}parseHandshakeResponse(t){let e,n,o;if(g(t)){const e=new Uint8Array(t),r=e.indexOf($.RecordSeparatorCode);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;n=String.fromCharCode.apply(null,Array.prototype.slice.call(e.slice(0,i))),o=e.byteLength>i?e.slice(i).buffer:null}else{const e=t,r=e.indexOf($.RecordSeparator);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;n=e.substring(0,i),o=e.length>i?e.substring(i):null}const r=$.parse(n),i=JSON.parse(r[0]);if(i.type)throw new Error("Expected a handshake response from the server.");return e=i,[o,e]}}var I,R;!function(t){t[t.Invocation=1]="Invocation",t[t.StreamItem=2]="StreamItem",t[t.Completion=3]="Completion",t[t.StreamInvocation=4]="StreamInvocation",t[t.CancelInvocation=5]="CancelInvocation",t[t.Ping=6]="Ping",t[t.Close=7]="Close"}(I||(I={}));class k{constructor(){this.observers=[]}next(t){for(const e of this.observers)e.next(t)}error(t){for(const e of this.observers)e.error&&e.error(t)}complete(){for(const t of this.observers)t.complete&&t.complete()}subscribe(t){return this.observers.push(t),new f(this,t)}}!function(t){t.Disconnected="Disconnected",t.Connecting="Connecting",t.Connected="Connected",t.Disconnecting="Disconnecting",t.Reconnecting="Reconnecting"}(R||(R={}));class P{constructor(t,e,n,o){l.isRequired(t,"connection"),l.isRequired(e,"logger"),l.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this.u=e,this.$=n,this.connection=t,this.C=o,this.S=new T,this.connection.onreceive=t=>this.P(t),this.connection.onclose=t=>this.k(t),this.T={},this._={},this.I=[],this.H=[],this.D=[],this.A=0,this.U=!1,this.R=R.Disconnected,this.L=!1,this.N=this.$.writeMessage({type:I.Ping})}static create(t,e,n,o){return new P(t,e,n,o)}get state(){return this.R}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(t){if(this.R!==R.Disconnected&&this.R!==R.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!t)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=t}start(){return this.q=this.M(),this.q}async M(){if(this.R!==R.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this.R=R.Connecting,this.u.log(t.Debug,"Starting HubConnection.");try{await this.O(),this.R=R.Connected,this.L=!0,this.u.log(t.Debug,"HubConnection connected successfully.")}catch(e){return this.R=R.Disconnected,this.u.log(t.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async O(){this.W=void 0,this.U=!1;const e=new Promise(((t,e)=>{this.j=t,this.F=e}));await this.connection.start(this.$.transferFormat);try{const n={protocol:this.$.name,version:this.$.version};if(this.u.log(t.Debug,"Sending handshake request."),await this.B(this.S.writeHandshakeRequest(n)),this.u.log(t.Information,`Using HubProtocol '${this.$.name}'.`),this.X(),this.J(),this.V(),await e,this.W)throw this.W}catch(e){throw this.u.log(t.Debug,`Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`),this.X(),this.G(),await this.connection.stop(e),e}}async stop(){const t=this.q;this.K=this.Y(),await this.K;try{await t}catch(t){}}Y(e){return this.R===R.Disconnected?(this.u.log(t.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this.R===R.Disconnecting?(this.u.log(t.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this.K):(this.R=R.Disconnecting,this.u.log(t.Debug,"Stopping HubConnection."),this.Z?(this.u.log(t.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this.Z),this.Z=void 0,this.tt(),Promise.resolve()):(this.X(),this.G(),this.W=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(t,...e){const[n,o]=this.et(e),r=this.st(t,e,o);let i;const s=new k;return s.cancelCallback=()=>{const t=this.it(r.invocationId);return delete this.T[r.invocationId],i.then((()=>this.nt(t)))},this.T[r.invocationId]=(t,e)=>{e?s.error(e):t&&(t.type===I.Completion?t.error?s.error(new Error(t.error)):s.complete():s.next(t.item))},i=this.nt(r).catch((t=>{s.error(t),delete this.T[r.invocationId]})),this.rt(n,i),s}B(t){return this.V(),this.connection.send(t)}nt(t){return this.B(this.$.writeMessage(t))}send(t,...e){const[n,o]=this.et(e),r=this.nt(this.ot(t,e,!0,o));return this.rt(n,r),r}invoke(t,...e){const[n,o]=this.et(e),r=this.ot(t,e,!1,o);return new Promise(((t,e)=>{this.T[r.invocationId]=(n,o)=>{o?e(o):n&&(n.type===I.Completion?n.error?e(new Error(n.error)):t(n.result):e(new Error(`Unexpected message type: ${n.type}`)))};const o=this.nt(r).catch((t=>{e(t),delete this.T[r.invocationId]}));this.rt(n,o)}))}on(t,e){t&&e&&(t=t.toLowerCase(),this._[t]||(this._[t]=[]),-1===this._[t].indexOf(e)&&this._[t].push(e))}off(t,e){if(!t)return;t=t.toLowerCase();const n=this._[t];if(n)if(e){const o=n.indexOf(e);-1!==o&&(n.splice(o,1),0===n.length&&delete this._[t])}else delete this._[t]}onclose(t){t&&this.I.push(t)}onreconnecting(t){t&&this.H.push(t)}onreconnected(t){t&&this.D.push(t)}P(e){if(this.X(),this.U||(e=this.ht(e),this.U=!0),e){const n=this.$.parseMessages(e,this.u);for(const e of n)switch(e.type){case I.Invocation:this.ct(e);break;case I.StreamItem:case I.Completion:const n=this.T[e.invocationId];n&&(e.type===I.Completion&&delete this.T[e.invocationId],n(e));break;case I.Ping:break;case I.Close:this.u.log(t.Information,"Close message received from server.");const o=e.error?new Error("Server returned an error on close: "+e.error):void 0;!0===e.allowReconnect?this.connection.stop(o):this.K=this.Y(o);break;default:this.u.log(t.Warning,`Invalid message type: ${e.type}.`)}}this.J()}ht(e){let n,o;try{[o,n]=this.S.parseHandshakeResponse(e)}catch(e){const n="Error parsing handshake response: "+e;this.u.log(t.Error,n);const o=new Error(n);throw this.F(o),o}if(n.error){const e="Server returned handshake error: "+n.error;this.u.log(t.Error,e);const o=new Error(e);throw this.F(o),o}return this.u.log(t.Debug,"Server handshake complete."),this.j(),o}V(){this.connection.features.inherentKeepAlive||(this.G(),this.at=setTimeout((async()=>{if(this.R===R.Connected)try{await this.B(this.N)}catch{this.G()}}),this.keepAliveIntervalInMilliseconds))}J(){this.connection.features&&this.connection.features.inherentKeepAlive||(this.lt=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds))}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}ct(e){const n=this._[e.target.toLowerCase()];if(n){try{n.forEach((t=>t.apply(this,e.arguments)))}catch(n){this.u.log(t.Error,`A callback for the method ${e.target.toLowerCase()} threw error '${n}'.`)}if(e.invocationId){const e="Server requested a response, which is not supported in this version of the client.";this.u.log(t.Error,e),this.K=this.Y(new Error(e))}}else this.u.log(t.Warning,`No client method with the name '${e.target}' found.`)}k(e){this.u.log(t.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this.R}.`),this.W=this.W||e||new Error("The underlying connection was closed before the hub handshake could complete."),this.j&&this.j(),this.ut(e||new Error("Invocation canceled due to the underlying connection being closed.")),this.X(),this.G(),this.R===R.Disconnecting?this.tt(e):this.R===R.Connected&&this.C?this.dt(e):this.R===R.Connected&&this.tt(e)}tt(e){if(this.L){this.R=R.Disconnected,this.L=!1;try{this.I.forEach((t=>t.apply(this,[e])))}catch(n){this.u.log(t.Error,`An onclose callback called with error '${e}' threw error '${n}'.`)}}}async dt(e){const n=Date.now();let o=0,r=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),i=this.ft(o++,0,r);if(null===i)return this.u.log(t.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this.tt(e);if(this.R=R.Reconnecting,e?this.u.log(t.Information,`Connection reconnecting because of error '${e}'.`):this.u.log(t.Information,"Connection reconnecting."),0!==this.H.length){try{this.H.forEach((t=>t.apply(this,[e])))}catch(n){this.u.log(t.Error,`An onreconnecting callback called with error '${e}' threw error '${n}'.`)}if(this.R!==R.Reconnecting)return void this.u.log(t.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==i;){if(this.u.log(t.Information,`Reconnect attempt number ${o} will start in ${i} ms.`),await new Promise((t=>{this.Z=setTimeout(t,i)})),this.Z=void 0,this.R!==R.Reconnecting)return void this.u.log(t.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this.O(),this.R=R.Connected,this.u.log(t.Information,"HubConnection reconnected successfully."),0!==this.D.length)try{this.D.forEach((t=>t.apply(this,[this.connection.connectionId])))}catch(e){this.u.log(t.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`)}return}catch(e){if(this.u.log(t.Information,`Reconnect attempt failed because of error '${e}'.`),this.R!==R.Reconnecting)return this.u.log(t.Debug,`Connection moved to the '${this.R}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this.R===R.Disconnecting&&this.tt());r=e instanceof Error?e:new Error(e.toString()),i=this.ft(o++,Date.now()-n,r)}}this.u.log(t.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${o} failed attempts. Connection disconnecting.`),this.tt()}ft(e,n,o){try{return this.C.nextRetryDelayInMilliseconds({elapsedMilliseconds:n,previousRetryCount:e,retryReason:o})}catch(o){return this.u.log(t.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${n}) threw error '${o}'.`),null}}ut(t){const e=this.T;this.T={},Object.keys(e).forEach((n=>{(0,e[n])(null,t)}))}G(){this.at&&clearTimeout(this.at)}X(){this.lt&&clearTimeout(this.lt)}ot(t,e,n,o){if(n)return 0!==o.length?{arguments:e,streamIds:o,target:t,type:I.Invocation}:{arguments:e,target:t,type:I.Invocation};{const n=this.A;return this.A++,0!==o.length?{arguments:e,invocationId:n.toString(),streamIds:o,target:t,type:I.Invocation}:{arguments:e,invocationId:n.toString(),target:t,type:I.Invocation}}}rt(t,e){if(0!==t.length){e||(e=Promise.resolve());for(const n in t)t[n].subscribe({complete:()=>{e=e.then((()=>this.nt(this.wt(n))))},error:t=>{let o;o=t instanceof Error?t.message:t&&t.toString?t.toString():"Unknown error",e=e.then((()=>this.nt(this.wt(n,o))))},next:t=>{e=e.then((()=>this.nt(this.gt(n,t))))}})}}et(t){const e=[],n=[];for(let o=0;o<t.length;o++){const r=t[o];if(this.yt(r)){const i=this.A;this.A++,e[i]=r,n.push(i.toString()),t.splice(o,1)}}return[e,n]}yt(t){return t&&t.subscribe&&"function"==typeof t.subscribe}st(t,e,n){const o=this.A;return this.A++,0!==n.length?{arguments:e,invocationId:o.toString(),streamIds:n,target:t,type:I.StreamInvocation}:{arguments:e,invocationId:o.toString(),target:t,type:I.StreamInvocation}}it(t){return{invocationId:t,type:I.CancelInvocation}}gt(t,e){return{invocationId:t,item:e,type:I.StreamItem}}wt(t,e,n){return e?{error:e,invocationId:t,type:I.Completion}:{invocationId:t,result:n,type:I.Completion}}}const D=[0,2e3,1e4,3e4,null];class x{constructor(t){this.bt=void 0!==t?[...t,null]:D}nextRetryDelayInMilliseconds(t){return this.bt[t.previousRetryCount]}}var H,L;!function(t){t[t.None=0]="None",t[t.WebSockets=1]="WebSockets",t[t.ServerSentEvents=2]="ServerSentEvents",t[t.LongPolling=4]="LongPolling"}(H||(H={})),function(t){t[t.Text=1]="Text",t[t.Binary=2]="Binary"}(L||(L={}));class q{constructor(){this.vt=!1,this.onabort=null}abort(){this.vt||(this.vt=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this.vt}}class A{constructor(t,e,n,o,r,i){this.v=t,this.Et=e,this.u=n,this.$t=new q,this.Ct=o,this.St=r,this.Pt=i,this.kt=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this.$t.aborted}async connect(e,n){if(l.isRequired(e,"url"),l.isRequired(n,"transferFormat"),l.isIn(n,L,"transferFormat"),this.Tt=e,this.u.log(t.Trace,"(LongPolling transport) Connecting."),n===L.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[r,i]=m(),s={[r]:i,...this.Pt},c={abortSignal:this.$t.signal,headers:s,timeout:1e5,withCredentials:this.St};n===L.Binary&&(c.responseType="arraybuffer");const a=await this._t();this.It(c,a);const h=`${e}&_=${Date.now()}`;this.u.log(t.Trace,`(LongPolling transport) polling: ${h}.`);const u=await this.v.get(h,c);200!==u.statusCode?(this.u.log(t.Error,`(LongPolling transport) Unexpected response code: ${u.statusCode}.`),this.Ht=new o(u.statusText||"",u.statusCode),this.kt=!1):this.kt=!0,this.Dt=this.At(this.Tt,c)}async _t(){return this.Et?await this.Et():null}It(t,e){t.headers||(t.headers={}),e?t.headers.Authorization=`Bearer ${e}`:t.headers.Authorization&&delete t.headers.Authorization}async At(e,n){try{for(;this.kt;){const i=await this._t();this.It(n,i);try{const r=`${e}&_=${Date.now()}`;this.u.log(t.Trace,`(LongPolling transport) polling: ${r}.`);const i=await this.v.get(r,n);204===i.statusCode?(this.u.log(t.Information,"(LongPolling transport) Poll terminated by server."),this.kt=!1):200!==i.statusCode?(this.u.log(t.Error,`(LongPolling transport) Unexpected response code: ${i.statusCode}.`),this.Ht=new o(i.statusText||"",i.statusCode),this.kt=!1):i.content?(this.u.log(t.Trace,`(LongPolling transport) data received. ${d(i.content,this.Ct)}.`),this.onreceive&&this.onreceive(i.content)):this.u.log(t.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this.kt?e instanceof r?this.u.log(t.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this.Ht=e,this.kt=!1):this.u.log(t.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}}finally{this.u.log(t.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this.Ut()}}async send(t){return this.kt?p(this.u,"LongPolling",this.v,this.Tt,this.Et,t,this.Ct,this.St,this.Pt):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this.u.log(t.Trace,"(LongPolling transport) Stopping polling."),this.kt=!1,this.$t.abort();try{await this.Dt,this.u.log(t.Trace,`(LongPolling transport) sending DELETE request to ${this.Tt}.`);const e={},[n,o]=m();e[n]=o;const r={headers:{...e,...this.Pt},withCredentials:this.St},i=await this._t();this.It(r,i),await this.v.delete(this.Tt,r),this.u.log(t.Trace,"(LongPolling transport) DELETE request sent.")}finally{this.u.log(t.Trace,"(LongPolling transport) Stop finished."),this.Ut()}}Ut(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this.Ht&&(e+=" Error: "+this.Ht),this.u.log(t.Trace,e),this.onclose(this.Ht)}}}class j{constructor(t,e,n,o,r,i,s){this.v=t,this.Et=e,this.u=n,this.Ct=o,this.St=i,this.Rt=r,this.Pt=s,this.onreceive=null,this.onclose=null}async connect(e,n){if(l.isRequired(e,"url"),l.isRequired(n,"transferFormat"),l.isIn(n,L,"transferFormat"),this.u.log(t.Trace,"(SSE transport) Connecting."),this.Tt=e,this.Et){const t=await this.Et();t&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(t)}`)}return new Promise(((o,r)=>{let i,s=!1;if(n===L.Text){if(u.isBrowser||u.isWebWorker)i=new this.Rt(e,{withCredentials:this.St});else{const t=this.v.getCookieString(e),n={};n.Cookie=t;const[o,r]=m();n[o]=r,i=new this.Rt(e,{withCredentials:this.St,headers:{...n,...this.Pt}})}try{i.onmessage=e=>{if(this.onreceive)try{this.u.log(t.Trace,`(SSE transport) data received. ${d(e.data,this.Ct)}.`),this.onreceive(e.data)}catch(t){return void this.Lt(t)}},i.onerror=t=>{const e=new Error("Error occurred while starting EventSource");s?this.Lt(e):r(e)},i.onopen=()=>{this.u.log(t.Information,`SSE connected to ${this.Tt}`),this.xt=i,s=!0,o()}}catch(t){return void r(t)}}else r(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))}))}async send(t){return this.xt?p(this.u,"SSE",this.v,this.Tt,this.Et,t,this.Ct,this.St,this.Pt):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this.Lt(),Promise.resolve()}Lt(t){this.xt&&(this.xt.close(),this.xt=void 0,this.onclose&&this.onclose(t))}}class N{constructor(t,e,n,o,r,i){this.u=n,this.Et=e,this.Ct=o,this.Nt=r,this.v=t,this.onreceive=null,this.onclose=null,this.Pt=i}async connect(e,n){if(l.isRequired(e,"url"),l.isRequired(n,"transferFormat"),l.isIn(n,L,"transferFormat"),this.u.log(t.Trace,"(WebSockets transport) Connecting."),this.Et){const t=await this.Et();t&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(t)}`)}return new Promise(((o,r)=>{let i;e=e.replace(/^http/,"ws");const s=this.v.getCookieString(e);let c=!1;if(u.isNode){const t={},[n,o]=m();t[n]=o,s&&(t.Cookie=`${s}`),i=new this.Nt(e,void 0,{headers:{...t,...this.Pt}})}i||(i=new this.Nt(e)),n===L.Binary&&(i.binaryType="arraybuffer"),i.onopen=n=>{this.u.log(t.Information,`WebSocket connected to ${e}.`),this.qt=i,c=!0,o()},i.onerror=t=>{let e=null;e="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:new Error("There was an error with the transport."),r(e)},i.onmessage=e=>{if(this.u.log(t.Trace,`(WebSockets transport) data received. ${d(e.data,this.Ct)}.`),this.onreceive)try{this.onreceive(e.data)}catch(t){return void this.Lt(t)}},i.onclose=t=>{if(c)this.Lt(t);else{let e=null;e="undefined"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:new Error("There was an error with the transport."),r(e)}}}))}send(e){return this.qt&&this.qt.readyState===this.Nt.OPEN?(this.u.log(t.Trace,`(WebSockets transport) sending data. ${d(e,this.Ct)}.`),this.qt.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this.qt&&this.Lt(void 0),Promise.resolve()}Lt(e){this.qt&&(this.qt.onclose=()=>{},this.qt.onmessage=()=>{},this.qt.onerror=()=>{},this.qt.close(),this.qt=void 0),this.u.log(t.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this.Mt(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason}).`)))}Mt(t){return t&&"boolean"==typeof t.wasClean&&"number"==typeof t.code}}class W{constructor(e,n={}){var o;if(this.Ot=()=>{},this.features={},this.Wt=1,l.isRequired(e,"url"),this.u=void 0===(o=n.logger)?new w(t.Information):null===o?a.instance:void 0!==o.log?o:new w(o),this.baseUrl=this.jt(e),(n=n||{}).logMessageContent=void 0!==n.logMessageContent&&n.logMessageContent,"boolean"!=typeof n.withCredentials&&void 0!==n.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");n.withCredentials=void 0===n.withCredentials||n.withCredentials;let r=null,i=null;if(u.isNode){const t=require;r=t("ws"),i=t("eventsource")}u.isNode||"undefined"==typeof WebSocket||n.WebSocket?u.isNode&&!n.WebSocket&&r&&(n.WebSocket=r):n.WebSocket=WebSocket,u.isNode||"undefined"==typeof EventSource||n.EventSource?u.isNode&&!n.EventSource&&void 0!==i&&(n.EventSource=i):n.EventSource=EventSource,this.v=n.httpClient||new S(this.u),this.R="Disconnected",this.L=!1,this.Ft=n,this.onreceive=null,this.onclose=null}async start(e){if(e=e||L.Binary,l.isIn(e,L,"transferFormat"),this.u.log(t.Debug,`Starting connection with transfer format '${L[e]}'.`),"Disconnected"!==this.R)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this.R="Connecting",this.Bt=this.O(e),await this.Bt,"Disconnecting"===this.R){const e="Failed to start the HttpConnection before stop() was called.";return this.u.log(t.Error,e),await this.K,Promise.reject(new Error(e))}if("Connected"!==this.R){const e="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this.u.log(t.Error,e),Promise.reject(new Error(e))}this.L=!0}send(t){return"Connected"!==this.R?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this.Xt||(this.Xt=new O(this.transport)),this.Xt.send(t))}async stop(e){return"Disconnected"===this.R?(this.u.log(t.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this.R?(this.u.log(t.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this.K):(this.R="Disconnecting",this.K=new Promise((t=>{this.Ot=t})),await this.Y(e),void await this.K)}async Y(e){this.Jt=e;try{await this.Bt}catch(t){}if(this.transport){try{await this.transport.stop()}catch(e){this.u.log(t.Error,`HttpConnection.transport.stop() threw error '${e}'.`),this.Vt()}this.transport=void 0}else this.u.log(t.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async O(e){let n=this.baseUrl;this.Et=this.Ft.accessTokenFactory;try{if(this.Ft.skipNegotiation){if(this.Ft.transport!==H.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this.zt(H.WebSockets),await this.Gt(n,e)}else{let t=null,o=0;do{if(t=await this.Kt(n),"Disconnecting"===this.R||"Disconnected"===this.R)throw new Error("The connection was stopped during negotiation.");if(t.error)throw new Error(t.error);if(t.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(t.url&&(n=t.url),t.accessToken){const e=t.accessToken;this.Et=()=>e}o++}while(t.url&&o<100);if(100===o&&t.url)throw new Error("Negotiate redirection limit exceeded.");await this.Qt(n,this.Ft.transport,t,e)}this.transport instanceof A&&(this.features.inherentKeepAlive=!0),"Connecting"===this.R&&(this.u.log(t.Debug,"The HttpConnection connected successfully."),this.R="Connected")}catch(e){return this.u.log(t.Error,"Failed to start the connection: "+e),this.R="Disconnected",this.transport=void 0,this.Ot(),Promise.reject(e)}}async Kt(e){const n={};if(this.Et){const t=await this.Et();t&&(n.Authorization=`Bearer ${t}`)}const[o,r]=m();n[o]=r;const i=this.Yt(e);this.u.log(t.Debug,`Sending negotiation request: ${i}.`);try{const t=await this.v.post(i,{content:"",headers:{...n,...this.Ft.headers},withCredentials:this.Ft.withCredentials});if(200!==t.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${t.statusCode}'`));const e=JSON.parse(t.content);return(!e.negotiateVersion||e.negotiateVersion<1)&&(e.connectionToken=e.connectionId),e}catch(e){return this.u.log(t.Error,"Failed to complete negotiation with the server: "+e),Promise.reject(e)}}Zt(t,e){return e?t+(-1===t.indexOf("?")?"?":"&")+`id=${e}`:t}async Qt(e,n,o,r){let i=this.Zt(e,o.connectionToken);if(this.te(n))return this.u.log(t.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=n,await this.Gt(i,r),void(this.connectionId=o.connectionId);const s=[],c=o.availableTransports||[];let a=o;for(const o of c){const c=this.ee(o,n,r);if(c instanceof Error)s.push(`${o.transport} failed: ${c}`);else if(this.te(c)){if(this.transport=c,!a){try{a=await this.Kt(e)}catch(t){return Promise.reject(t)}i=this.Zt(e,a.connectionToken)}try{return await this.Gt(i,r),void(this.connectionId=a.connectionId)}catch(e){if(this.u.log(t.Error,`Failed to start the transport '${o.transport}': ${e}`),a=void 0,s.push(`${o.transport} failed: ${e}`),"Connecting"!==this.R){const e="Failed to select transport before stop() was called.";return this.u.log(t.Debug,e),Promise.reject(new Error(e))}}}}return s.length>0?Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${s.join(" ")}`)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}zt(t){switch(t){case H.WebSockets:if(!this.Ft.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new N(this.v,this.Et,this.u,this.Ft.logMessageContent||!1,this.Ft.WebSocket,this.Ft.headers||{});case H.ServerSentEvents:if(!this.Ft.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new j(this.v,this.Et,this.u,this.Ft.logMessageContent||!1,this.Ft.EventSource,this.Ft.withCredentials,this.Ft.headers||{});case H.LongPolling:return new A(this.v,this.Et,this.u,this.Ft.logMessageContent||!1,this.Ft.withCredentials,this.Ft.headers||{});default:throw new Error(`Unknown transport: ${t}.`)}}Gt(t,e){return this.transport.onreceive=this.onreceive,this.transport.onclose=t=>this.Vt(t),this.transport.connect(t,e)}ee(e,n,o){const r=H[e.transport];if(null==r)return this.u.log(t.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function(t,e){return!t||0!=(e&t)}(n,r))return this.u.log(t.Debug,`Skipping transport '${H[r]}' because it was disabled by the client.`),new Error(`'${H[r]}' is disabled by the client.`);if(!(e.transferFormats.map((t=>L[t])).indexOf(o)>=0))return this.u.log(t.Debug,`Skipping transport '${H[r]}' because it does not support the requested transfer format '${L[o]}'.`),new Error(`'${H[r]}' does not support ${L[o]}.`);if(r===H.WebSockets&&!this.Ft.WebSocket||r===H.ServerSentEvents&&!this.Ft.EventSource)return this.u.log(t.Debug,`Skipping transport '${H[r]}' because it is not supported in your environment.'`),new Error(`'${H[r]}' is not supported in your environment.`);this.u.log(t.Debug,`Selecting transport '${H[r]}'.`);try{return this.zt(r)}catch(t){return t}}te(t){return t&&"object"==typeof t&&"connect"in t}Vt(e){if(this.u.log(t.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this.R}.`),this.transport=void 0,e=this.Jt||e,this.Jt=void 0,"Disconnected"!==this.R){if("Connecting"===this.R)throw this.u.log(t.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this.R&&this.Ot(),e?this.u.log(t.Error,`Connection disconnected with error '${e}'.`):this.u.log(t.Information,"Connection disconnected."),this.Xt&&(this.Xt.stop().catch((e=>{this.u.log(t.Error,`TransportSendQueue.stop() threw error '${e}'.`)})),this.Xt=void 0),this.connectionId=void 0,this.R="Disconnected",this.L){this.L=!1;try{this.onclose&&this.onclose(e)}catch(n){this.u.log(t.Error,`HttpConnection.onclose(${e}) threw error '${n}'.`)}}}else this.u.log(t.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}jt(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!u.isBrowser||!window.document)throw new Error(`Cannot resolve '${e}'.`);const n=window.document.createElement("a");return n.href=e,this.u.log(t.Information,`Normalizing '${e}' to '${n.href}'.`),n.href}Yt(t){const e=t.indexOf("?");let n=t.substring(0,-1===e?t.length:e);return"/"!==n[n.length-1]&&(n+="/"),n+="negotiate",n+=-1===e?"":t.substring(e),-1===n.indexOf("negotiateVersion")&&(n+=-1===e?"?":"&",n+="negotiateVersion="+this.Wt),n}}class O{constructor(t){this.se=t,this.ie=[],this.ne=!0,this.re=new U,this.oe=new U,this.he=this.ce()}send(t){return this.ae(t),this.oe||(this.oe=new U),this.oe.promise}stop(){return this.ne=!1,this.re.resolve(),this.he}ae(t){if(this.ie.length&&typeof this.ie[0]!=typeof t)throw new Error(`Expected data to be of type ${typeof this.ie} but was of type ${typeof t}`);this.ie.push(t),this.re.resolve()}async ce(){for(;;){if(await this.re.promise,!this.ne){this.oe&&this.oe.reject("Connection stopped.");break}this.re=new U;const t=this.oe;this.oe=void 0;const e="string"==typeof this.ie[0]?this.ie.join(""):O.le(this.ie);this.ie.length=0;try{await this.se.send(e),t.resolve()}catch(e){t.reject(e)}}}static le(t){const e=t.map((t=>t.byteLength)).reduce(((t,e)=>t+e)),n=new Uint8Array(e);let o=0;for(const e of t)n.set(new Uint8Array(e),o),o+=e.byteLength;return n.buffer}}class U{constructor(){this.promise=new Promise(((t,e)=>[this.ue,this.de]=[t,e]))}resolve(){this.ue()}reject(t){this.de(t)}}class F{constructor(){this.name="json",this.version=1,this.transferFormat=L.Text}parseMessages(e,n){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===n&&(n=a.instance);const o=$.parse(e),r=[];for(const e of o){const o=JSON.parse(e);if("number"!=typeof o.type)throw new Error("Invalid payload.");switch(o.type){case I.Invocation:this.pe(o);break;case I.StreamItem:this.fe(o);break;case I.Completion:this.we(o);break;case I.Ping:case I.Close:break;default:n.log(t.Information,"Unknown message type '"+o.type+"' ignored.");continue}r.push(o)}return r}writeMessage(t){return $.write(JSON.stringify(t))}pe(t){this.ge(t.target,"Invalid payload for Invocation message."),void 0!==t.invocationId&&this.ge(t.invocationId,"Invalid payload for Invocation message.")}fe(t){if(this.ge(t.invocationId,"Invalid payload for StreamItem message."),void 0===t.item)throw new Error("Invalid payload for StreamItem message.")}we(t){if(t.result&&t.error)throw new Error("Invalid payload for Completion message.");!t.result&&t.error&&this.ge(t.error,"Invalid payload for Completion message."),this.ge(t.invocationId,"Invalid payload for Completion message.")}ge(t,e){if("string"!=typeof t||""===t)throw new Error(e)}}const M={trace:t.Trace,debug:t.Debug,info:t.Information,information:t.Information,warn:t.Warning,warning:t.Warning,error:t.Error,critical:t.Critical,none:t.None};class B{configureLogging(t){if(l.isRequired(t,"logging"),void 0!==t.log)this.logger=t;else if("string"==typeof t){const e=function(t){const e=M[t.toLowerCase()];if(void 0!==e)return e;throw new Error(`Unknown log level: ${t}`)}(t);this.logger=new w(e)}else this.logger=new w(t);return this}withUrl(t,e){return l.isRequired(t,"url"),l.isNotEmpty(t,"url"),this.url=t,this.httpConnectionOptions="object"==typeof e?{...this.httpConnectionOptions,...e}:{...this.httpConnectionOptions,transport:e},this}withHubProtocol(t){return l.isRequired(t,"protocol"),this.protocol=t,this}withAutomaticReconnect(t){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return t?Array.isArray(t)?this.reconnectPolicy=new x(t):this.reconnectPolicy=t:this.reconnectPolicy=new x,this}build(){const t=this.httpConnectionOptions||{};if(void 0===t.logger&&(t.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const e=new W(this.url,t);return P.create(e,this.logger||a.instance,this.protocol||new F,this.reconnectPolicy)}}return Uint8Array.prototype.indexOf||Object.defineProperty(Uint8Array.prototype,"indexOf",{value:Array.prototype.indexOf,writable:!0}),Uint8Array.prototype.slice||Object.defineProperty(Uint8Array.prototype,"slice",{value:function(t,e){return new Uint8Array(Array.prototype.slice.call(this,t,e))},writable:!0}),Uint8Array.prototype.forEach||Object.defineProperty(Uint8Array.prototype,"forEach",{value:Array.prototype.forEach,writable:!0}),n})()},"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.signalR=e():t.signalR=e();
//# sourceMappingURL=signalr.min.js.map