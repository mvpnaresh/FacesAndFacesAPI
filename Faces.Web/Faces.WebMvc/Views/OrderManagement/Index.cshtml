@using Faces.WebMvc.Settings
@using Microsoft.Extensions.Options
@inject IOptions<AppSettings> settings

@model List<Faces.WebMvc.ViewModels.OrderViewModel>
@{
    ViewData["Title"] = "Orders List";
}
<h3>Orders Mangement - overview</h3>
<table>
    <thead>
        <tr>
            <th>Order Id</th>
            <th>User Email</th>
            <th>Image</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr class="clickable" onclick="location.href = '@Url.Action("Details", "OrderManagement", new { orderId = order.OrderId })'">
                <td>@order.OrderId</td>
                <td>@order.UserEmail</td>
                <td><img src="@order.ImageString" width="50px" height="50px"></td>
                <td>@order.Status</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script type="text/javascript">
        var timerId;

        const hubConnectionUrl = '@settings.Value.SignalRHubUrl' + '/' + 'orderhub';
        console.log(hubConnectionUrl);

        const connection = new signalR.HubConnectionBuilder()
            .withUrl(hubConnectionUrl, {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets
            })
            .configureLogging(signalR.LogLevel.Information)
            .withAutomaticReconnect()
            .build();

        connection.on('UpdateOrders', (message, orderId) => {
            const encodedMsg = message + ":" + orderId;
            console.log(encodedMsg);

                toastr.success(orderId + ' Updated to status ' + message);
                refreshPage();

        });

        function refreshPage() {
            clearTimeout(timerId);
            timerId = setTimeout(function () {
                window.location.reload();
            }, 2000)
        };

        connection.start().catch(err => console.error(err.toString()));

    </script>
}
